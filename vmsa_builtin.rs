use bytemuck::{bytes_of, Pod, Zeroable};
use libc::{c_uchar, c_uint, c_ulonglong, c_ushort};

use crate::guest::measure::types::SevMode;
use crate::guest::measure::vcpu_types::CpuType;

const BSP_EIP: c_ulonglong = 0xfffffff0;

/// VMCB Segment (struct vmcb_seg in the linux kernel)
#[repr(C)]
#[derive(Debug, Clone, Copy)]
pub struct VmcbSeg {
    selector: c_ushort,
    attrib: c_ushort,
    limit: c_uint,
    base: c_ulonglong,
}

impl VmcbSeg {
    pub fn new(selector: c_ushort,
               attrib: c_ushort,
               limit: c_uint,
               base: c_ulonglong) -> Self {
        Self { selector, attrib, limit, base }
    }
}

unsafe impl Zeroable for VmcbSeg {}

unsafe impl Pod for VmcbSeg {}

/// VMSA page
///
/// The names of the fields are taken from struct sev_es_work_area in the linux kernel:
/// https://github.com/AMDESE/linux/blob/sev-snp-v12/arch/x86/include/asm/svm.h#L318
/// (following the definitions in AMD APM Vol 2 Table B-4)
#[repr(C)]
#[derive(Debug, Clone, Copy)]
pub struct SevEsSaveArea {
    es: VmcbSeg,
    cs: VmcbSeg,
    ss: VmcbSeg,
    ds: VmcbSeg,
    fs: VmcbSeg,
    gs: VmcbSeg,
    gdtr: VmcbSeg,
    ldtr: VmcbSeg,
    idtr: VmcbSeg,
    tr: VmcbSeg,
    vmpl0_ssp: c_ulonglong,
    vmpl1_ssp: c_ulonglong,
    vmpl2_ssp: c_ulonglong,
    vmpl3_ssp: c_ulonglong,
    u_cet: c_ulonglong,
    reserved_1: [c_uchar; 2],
    vmpl: c_uchar,
    cpl: c_uchar,
    reserved_2: [c_uchar; 4],
    efer: c_ulonglong,
    reserved_3: [c_uchar; 104],
    xss: c_ulonglong,
    cr4: c_ulonglong,
    cr3: c_ulonglong,
    cr0: c_ulonglong,
    dr7: c_ulonglong,
    dr6: c_ulonglong,
    rflags: c_ulonglong,
    rip: c_ulonglong,
    dr0: c_ulonglong,
    dr1: c_ulonglong,
    dr2: c_ulonglong,
    dr3: c_ulonglong,
    dr0_addr_mask: c_ulonglong,
    dr1_addr_mask: c_ulonglong,
    dr2_addr_mask: c_ulonglong,
    dr3_addr_mask: c_ulonglong,
    reserved_4: [c_uchar; 24],
    rsp: c_ulonglong,
    s_cet: c_ulonglong,
    ssp: c_ulonglong,
    isst_addr: c_ulonglong,
    rax: c_ulonglong,
    star: c_ulonglong,
    lstar: c_ulonglong,
    cstar: c_ulonglong,
    sfmask: c_ulonglong,
    kernel_gs_base: c_ulonglong,
    sysenter_cs: c_ulonglong,
    sysenter_esp: c_ulonglong,
    sysenter_eip: c_ulonglong,
    cr2: c_ulonglong,
    reserved_5: [c_uchar; 32],
    g_pat: c_ulonglong,
    dbgctrl: c_ulonglong,
    br_from: c_ulonglong,
    br_to: c_ulonglong,
    last_excp_from: c_ulonglong,
    last_excp_to: c_ulonglong,
    reserved_6: [c_uchar; 80],
    pkru: c_uint,
    tsc_aux: c_uint,
    reserved_7: [c_uchar; 24],
    rcx: c_ulonglong,
    rdx: c_ulonglong,
    rbx: c_ulonglong,
    reserved_8: c_ulonglong,
    rbp: c_ulonglong,
    rsi: c_ulonglong,
    rdi: c_ulonglong,
    r8: c_ulonglong,
    r9: c_ulonglong,
    r10: c_ulonglong,
    r11: c_ulonglong,
    r12: c_ulonglong,
    r13: c_ulonglong,
    r14: c_ulonglong,
    r15: c_ulonglong,
    reserved_9: [c_uchar; 16],
    guest_exit_info_1: c_ulonglong,
    guest_exit_info_2: c_ulonglong,
    guest_exit_int_info: c_ulonglong,
    guest_nrip: c_ulonglong,
    sev_features: c_ulonglong,
    vintr_ctrl: c_ulonglong,
    guest_exit_code: c_ulonglong,
    virtual_tom: c_ulonglong,
    tlb_id: c_ulonglong,
    pcpu_id: c_ulonglong,
    event_inj: c_ulonglong,
    xcr0: c_ulonglong,
    reserved_10: [c_uchar; 16],
    x87_dp: c_ulonglong,
    mxcsr: c_uint,
    x87_ftw: c_ushort,
    x87_fsw: c_ushort,
    x87_fcw: c_ushort,
    x87_fop: c_ushort,
    x87_ds: c_ushort,
    x87_cs: c_ushort,
    x87_rip: c_ulonglong,
    fpreg_x87: [c_uchar; 80],
    fpreg_xmm: [c_uchar; 256],
    fpreg_ymm: [c_uchar; 256],
    manual_padding: [c_uchar; 2448],
}

unsafe impl Zeroable for SevEsSaveArea {}

unsafe impl Pod for SevEsSaveArea {}

pub struct VMSA {
    bsp_save_area: SevEsSaveArea,
    ap_save_area: Option<SevEsSaveArea>,
}

impl VMSA {
    pub fn new(sev_mode: SevMode, ap_eip: u64, vcpu_type: CpuType) -> Self {
        let sev_features = match sev_mode {
            SevMode::SevSnp => 0x1,
            _ => 0x0
        };

        let mut us = Self {
            bsp_save_area: Self::build_save_area(BSP_EIP,
                                                 sev_features, vcpu_type.clone()),
            ap_save_area: None,
        };

        if ap_eip > 0 {
            us.ap_save_area = Some(Self::build_save_area(ap_eip as c_ulonglong,
                                                         sev_features, vcpu_type));
        }

        us
    }

    pub(crate) fn build_save_area(eip: c_ulonglong,
                                  sev_features: c_ulonglong,
                                  vcpu_type: CpuType) -> SevEsSaveArea {
        let mut area = SevEsSaveArea::zeroed();
        area.es = VmcbSeg::new(0, 0x93, 0xffff, 0);
        area.es = VmcbSeg::new(0, 0x93, 0xffff, 0);
        area.cs = VmcbSeg::new(0xf000, 0x9b, 0xffff, eip & 0xffff0000);
        area.ss = VmcbSeg::new(0, 0x93, 0xffff, 0);
        area.ds = VmcbSeg::new(0, 0x93, 0xffff, 0);
        area.fs = VmcbSeg::new(0, 0x93, 0xffff, 0);
        area.gs = VmcbSeg::new(0, 0x93, 0xffff, 0);
        area.gdtr = VmcbSeg::new(0, 0, 0xffff, 0);
        area.idtr = VmcbSeg::new(0, 0, 0xffff, 0);
        area.ldtr = VmcbSeg::new(0, 0x82, 0xffff, 0);
        area.tr = VmcbSeg::new(0, 0x8b, 0xffff, 0);
        area.efer = 0x1000;  // KVM enables EFER_SVME
        area.cr4 = 0x40;     // KVM enables X86_CR4_MCE
        area.cr0 = 0x10;
        area.dr7 = 0x400;
        area.dr6 = 0xffff0ff0;
        area.rflags = 0x2;
        area.rip = eip & 0xffff;
        area.g_pat = 0x7040600070406;
        area.rdx = vcpu_type.sig() as c_ulonglong;
        area.sev_features = sev_features;
        area.xcr0 = 0x1;
        area.mxcsr = 0x1f80;
        area.x87_fcw = 0x37f;

        area
    }

    pub fn pages(&self, vcpus: usize) -> Vec<Vec<u8>> {
        let bsp_save_area_bytes = bytes_of(&self.bsp_save_area);
        let ap_save_area_bytes_maybe = self.ap_save_area
            .map(|v| bytes_of(&v).to_vec());

        let mut pages: Vec<Vec<u8>> = Vec::new();

        for i in 0..vcpus {
            if i == 0 {
                pages.push(bsp_save_area_bytes.to_vec());
            } else {
                if let Some(v) = ap_save_area_bytes_maybe.as_ref() {
                    pages.push(v.clone());
                }
            }
        }

        pages
    }
}

#[cfg(test)]
mod tests {
    use std::path::PathBuf;

    use libc::c_ulonglong;

    use crate::common::binary::fmt_bin_vec_to_hex;
    use crate::guest::measure::ovmf::OVMF;
    use crate::guest::measure::types::SevMode;
    use crate::guest::measure::vcpu_types::CpuType;
    use crate::guest::measure::vmsa::VMSA;

    const RESOURCES_TEST_DIR: &str = "resources/test/measure";

    #[test]
    fn vmsa_test() {
        let test_file = get_test_path("OVMF_CODE.fd");

        let ovmf = OVMF::from_path(&test_file)
            .expect("failed to load OVMF file");

        let sev_es_reset_eip = ovmf.sev_es_reset_eip().unwrap();

        let vmsa = VMSA::new(SevMode::SevSnp,
                             sev_es_reset_eip as c_ulonglong, CpuType::EpycV4);
        let pages = vmsa.pages(8);

        assert_eq!(pages.len(), 8);

        let first_page = pages.get(0).unwrap();

        assert_eq!(fmt_bin_vec_to_hex(first_page), "

        for idx in 1..pages.len() {
            let page = pages.get(idx).unwrap();
            assert_eq!(fmt_bin_vec_to_hex(page), "
        }
    }

    // Util
    fn get_test_path(path: &str) -> PathBuf {
        let mut test_path = PathBuf::from(env!("CARGO_MANIFEST_DIR"));
        test_path.push(RESOURCES_TEST_DIR);
        test_path.push(path);
        test_path
    }
}